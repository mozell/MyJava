import java.util.Scanner;

public class Elevator {
	int[] totalFloor;
	int nowFloor;

	public Elevator(int[] totalFloor) {
		this.totalFloor = totalFloor;
		this.nowFloor = 1;
	}
	
	public Elevator() {
		this.setFloor();
		this.nowFloor = 1;
	}
	
	// 개발중인 메소드
	public void setFloor() {
		int top, bottom;
		Scanner scan = new Scanner(System.in);
		int[] ground = null;
		int[] basement = null;
		
		System.out.print("최고층을 숫자로 입력하세요 >> ");
		try {
			top = Integer.parseInt(scan.next());
			ground = new int[top];
			for(int i = 0; i < top; i++) {
				ground[i] = i+1;
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		
		System.out.print("최저층을 숫자로 입력하세요 >> ");
		try {
			bottom = Integer.parseInt(scan.next());
			basement = new int[bottom];
			int temp = bottom;
			
			for(int i = 0; i < bottom ; i++) {
				basement[i] = temp*(-1);
				temp = temp - 1;
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		
		mergeFloor(ground, basement);
	}
	
	// 개발중인 메소드
	public int[] mergeFloor(int[] ground, int[] basement) {
		int total = ground.length + basement.length;
		int gl = ground.length;
		int bl = basement.length;
		int resultIndex = 0;
		int[] result = new int[total];
		
		for(int i = 0; i < bl; i++) {
			result[resultIndex] = basement[i];
			resultIndex += 1;
		}
		for(int i = 0; i < gl; i++) {
			result[resultIndex] = ground[i];
			resultIndex += 1;
		}
		
		
	
		for(int i = 0;i<total;i++) {
			System.out.print(result[i]+", ");
		}
		
		return result;
		
	}

	public int moveUp(int nowFloor) {
		nowFloor += 1;
		
		if (isExistFloor(nowFloor)) {
			this.nowFloor = nowFloor;
			return nowFloor;
		} else {
			System.out.println("최고층 입니다.");
			nowFloor -= 1;
			return nowFloor;
		}
	}

	public int moveDown(int nowFloor) {
		nowFloor -= 1;

		if (isExistFloor(nowFloor)) {
			this.nowFloor = nowFloor;
			return nowFloor;
		} else {
			System.out.println("최저층 입니다.");
			nowFloor += 1;
			return nowFloor;
		}
	}

	public boolean isExistFloor(int nowFloor) {
		int[] temp = this.totalFloor;

		for (int i = 0; i < temp.length; i++) {
			if (temp[i] == nowFloor) {
				return true;
			}
		}
		return false;
	}
	
}
