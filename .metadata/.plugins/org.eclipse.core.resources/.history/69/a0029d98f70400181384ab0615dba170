import java.util.Scanner;

public class Elevator {
	int[] totalFloor;
	
	public Elevator() {
		this.setFloor();
	}
	
	public void setFloor() {
		int top, bottom;
		Scanner scan = new Scanner(System.in);
		int[] ground = null;
		int[] basement = null;
		
		System.out.print("최고층을 숫자로 입력하세요 >> ");
		try {
			top = Integer.parseInt(scan.next());
			ground = new int[top];
			for(int i = 0; i < top; i++) {
				ground[i] = i+1;
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		
		System.out.print("최저층을 숫자로 입력하세요 >> ");
		try {
			bottom = Integer.parseInt(scan.next());
			basement = new int[bottom];
			int temp = bottom;
			
			for(int i = 0; i < bottom ; i++) {
				basement[i] = temp*(-1);
				temp = temp - 1;
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		scan.close();
		mergeFloor(ground, basement);
	}
	
	private void mergeFloor(int[] ground, int[] basement) {
		int total = ground.length + basement.length;
		int gl = ground.length;
		int bl = basement.length;
		int resultIndex = 0;
		int[] result = new int[total];
		
		for(int i = 0; i < bl; i++) {
			result[resultIndex] = basement[i];
			resultIndex += 1;
		}
		for(int i = 0; i < gl; i++) {
			result[resultIndex] = ground[i];
			resultIndex += 1;
		}	
		this.totalFloor = result;
	}

	public int moveUp(int currentFloor) {
		int cfi;
		cfi = checkFloorIndex(currentFloor);
		if (cfi < this.totalFloor.length)
			cfi++;
		else
			System.out.println("최고층입니다.");
		
		return this.totalFloor[cfi];
		
	}
	
	public int moveDown(int currentFloor) {
		int currentFloorIndex;
		currentFloorIndex = checkFloorIndex(currentFloor);	// 변수에는 들어가지는데 
//		int temp = currentFloorIndex;							// 쓰려고하면 안써짐..
//		System.out.println(">>>"+currnetFloorIndex);			// 근데 출력은 됨..?? 뭐야이거
		
		if (currentFloorIndex != 0)
			currentFloorIndex--;
		else
			System.out.println("최저층입니다.");
		
		return this.totalFloor[currentFloorIndex];
	}
	
	private int checkFloorIndex(int currentFloor) {
		int[] temp = this.totalFloor;
		for(int i = 0; i < temp.length; i++) {
			if(temp[i] == currentFloor)
				return i;
		}
		return 0;
	}
}

